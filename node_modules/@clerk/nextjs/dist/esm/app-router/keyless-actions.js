"use server";
import { cookies } from "next/headers";
import { redirect, RedirectType } from "next/navigation";
import { getKeylessCookieName } from "../server/keyless";
import { canUseKeyless__server } from "../utils/feature-flags";
async function syncKeylessConfigAction(args) {
  const { claimUrl, publishableKey, secretKey, returnUrl } = args;
  void (await cookies()).set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {
    secure: true,
    httpOnly: true
  });
  redirect(`/clerk-sync-keyless?returnUrl=${returnUrl}`, RedirectType.replace);
}
async function createOrReadKeylessAction() {
  if (!canUseKeyless__server) {
    return null;
  }
  const result = await import("../server/keyless-node.js").then((m) => m.createOrReadKeyless());
  if (!result) {
    return null;
  }
  const { claimUrl, publishableKey, secretKey, apiKeysUrl } = result;
  void (await cookies()).set(getKeylessCookieName(), JSON.stringify({ claimUrl, publishableKey, secretKey }), {
    secure: false,
    httpOnly: false
  });
  return {
    claimUrl,
    publishableKey,
    apiKeysUrl
  };
}
export {
  createOrReadKeylessAction,
  syncKeylessConfigAction
};
